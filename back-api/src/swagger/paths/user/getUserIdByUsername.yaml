get:
  tags:
    - 회원정보
  summary: userId로 username 찾기
  security:
    - Access Token: []  # 🔐 토큰 필요 설정
  parameters:
    - name: username
      in: query
      description: username으로 userId 찾기
      required: true
      schema:
        type: string
  responses:
    '200':
      description: 사용자 정보 가져오기 성공
      content:
        application/json:
          example:
            data:
              userId: user12@test.com
              username: 유저12
              profileImg: /test.png
            message: 사용자 정보 가져오기 성공
            status: 200
            success: true
    '404':
      description: 존재하지 않는 사용자
      content:
        application/json:
          example:
            message: 존재하지 않는 사용자입니다.
            status: 404
            success: false
    '500':
      description: 서버 오류 발생
      content:
        application/json:
          example:
            message: 서버 오류가 발생했습니다.
            status: 500
            success: false
